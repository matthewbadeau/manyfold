---
en:
  settings:
    analysis:
      description: Perform deep mesh analysis on models. These options will make your scans take significantly longer and use a lot more CPU and memory.
      heading: Mesh Analysis
      manifold:
        help: Check for non-manifold meshes (i.e. they have holes or impossible surfaces)
        label: Detect mesh errors
    domain_blocks:
      create:
        success: Domain block created successfully.
      destroy:
        success: Domain block removed.
      index:
        confirm_destroy: Are you sure you want to remove this domain block and re-enable federation?
        description: Domain blocks prevent federation with ActivityPub servers on the specified domains, including any subdomains.
        new: New domain block
        title: Domain Blocks
      new:
        submit: Block domain
        title: New Domain Block
    folder_settings:
      details: Folder structure follows a template that you define using tokens. You can also include other text in the template (such as folder separators) and it will be included as-is.
      model_path_template:
        label: Model path template
      parse_metadata_from_path:
        help: Sets creator, collection, and tags based on template
        label: Populate metadata from path and template during scan
      safe_folder_names:
        help_html: e.g. <code>spinal-tap</code> instead of <code>Spın̈al Tap</code>
        label: Use safe folder names
      summary: Define the folder structure used by "organize files" and for auto-populating metadata during scan. Affects all users.
      title: Folder naming
      tokens:
        collection: The title of the collection the model is in, if set.
        creator: The name of the creator, if set.
        model_id: A unique numerical identifier for the model. We strongly recommend always including this at the end of your template to avoid name conflicts on disk.
        model_name: A filesystem-safe version of the model name.
        tags_html: 'a series of nested folders, one for each tag, arranged in order of tag popularity. For example: <code>fantasy/human/wizard</code>'
    slicer_settings:
      heading: Slicer Settings
      description: Models can be opened using different slicers. Disable slicers you do not wish to use.
    general:
      submit: Save Settings
    multiuser:
      approve_signups:
        help: All new accounts must be approved by a moderator before they can log in.
        label: Approve accounts
      default_viewer_role:
        help: Who can view new models / creators / collections by default?
        label: Default visibility
        options:
          member: Logged-in local users
          none: Private
      details_html: To change these settings, edit the server's <a href='https://manyfold.app/sysadmin/configuration.html'>environment variables</a> and restart.
      email: Email delivery configured?
      federation: Federation enabled?
      heading: Multiuser
      multiuser: Multiuser mode?
      multiuser_mode: Manyfold is running in multiuser mode.
      oidc: OpenID Connect configured?
      permissions: Permissions
      registration: Account registration
      registration_open: Account registration open?
      single_user_mode: Manyfold is running in single user mode.
    reporting:
      description_html: If you enable usage tracking, the following information will be sent once a day to <code>%{endpoint}</code>. The <code>id</code> is randomly generated when you enable tracking.
      heading: Usage Tracking
      report_usage:
        label: Enable anonymous usage tracking
      summary: Let the devs know you're running Manyfold.
      use_of_data: No other information is sent or stored, and the devs will never use the information for any purpose other than measuring how many instances of Manyfold are running, and what version they are.
      verification_html: If you want to verify what we send, you can change the <code>USAGE_REPORTING_URL</code> environment variable and send the data somewhere you can inspect it. You can also see exactly what is sent in the log.
    reports:
      index:
        description: Content reported by local or Fediverse users shows up here for moderation.
        title: Reports
      show:
        ignore: Ignore
        resolve: Mark as resolved
      update:
        ignored: The report has been ignored.
        resolved: The report has been marked as resolved.
    tag_settings:
      auto_tag_new:
        label: Automatically tag new models with
      custom_stop_words:
        label: Custom stop words
      description: Add tags to all newly-scanned models, and filter out certain words ("stop words") during automatic tag creation. Affects all users.
      filter_stop_words:
        label: Filter out stop words
      heading: Tagging
      stop_words_locale:
        label: Stop words locale
      tag_model_directory_name:
        help: 'Warning: Can produce a lot of tags!'
        label: Create tags from model directory name
    update:
      success: Settings saved.
    users:
      create:
        success: User created successfully.
      destroy:
        success: User removed!
      edit:
        title: 'Edit user: %{username}'
      form:
        password_reset_help: A link will be sent automatically to the user for them to set their own password.
        submit: Save
      index:
        description: View and edit registered user accounts.
        fediverse_address: Fediverse address
        local: Local
        new: New user
        title: Manage Users
        view: View
      new:
        title: Create user
      show:
        approve: Approve user
        confirm_destroy: Are you sure you want to remove this user account immediately? This cannot be undone!
        reset_password: Reset password
        title: 'User details: %{username}'
      update:
        approved: User was approved successfully.
        reset_link_sent: A link has been sent to the user for them to set a new password.
        success: User updated successfully.
